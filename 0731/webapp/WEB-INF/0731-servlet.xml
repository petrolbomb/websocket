<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- 꼭 설정해야 함 -->
	<mvc:annotation-driven />
	<context:component-scan base-package="org.jbp.model2.*"/>

	<!-- Interceptor 설정 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/article/**" />
			<bean class="org.jbp.model2.interceptor.LoginCheck" />
		</mvc:interceptor>
	</mvc:interceptors>


	<!-- REST경우 모든 요청을 DispatcherServlet에서 받기 때문에 css,js,fonts등 폴더들에 접근시키는 설정이 
		필요함 -->
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/fonts/" mapping="/fonts/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/img/" mapping="/img/**" />
	<mvc:resources location="/profile/" mapping="/profile/**" />
	<mvc:resources location="/upload/" mapping="/upload/**" />

	<!-- /WEB-INF/view와 .jsp 중복을 편리하게 처리 -->
	<mvc:view-resolvers>
		<mvc:jsp suffix=".jsp" prefix="/WEB-INF/view/" />
	</mvc:view-resolvers>

	<!-- SpringWebMVC 에 대한 설정 
	<bean p:service-ref="articlesService"
		class="org.jbp.model2.controller.ArticleController" />
	<bean class="org.jbp.model2.controller.ReplyController" />
	<bean class="org.jbp.model2.controller.UserController" />

	<bean p:repliesService-ref="repliesService"
		p:articlesService-ref="articlesService"
		p:fileRenameUtil-ref="fileRenameUtil"
		p:imageUtil-ref="resizeImageUtil" p:usersService-ref="usersService"
		class="org.jbp.model2.controller.AjaxController" />

	<bean p:users-ref="users" class="org.jbp.model2.controller.ChatController" />
-->

	<!-- MultipartResovler -->
	<bean id="multipartResolver" p:defaultEncoding="UTF-8"
		p:maxUploadSize="104857600"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- 클라이언트에서 보낼때는 /app으로
	서버에 구독할때는 /topic으로 
	첫 연결은 /chat  -->
	
	<websocket:message-broker application-destination-prefix="/app">
		<websocket:stomp-endpoint path="/model2">
			<websocket:sockjs/>
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/topic,/queue"/>
	</websocket:message-broker>

	 <bean class="org.jbp.model2.listener.StompListener"/>

</beans>


